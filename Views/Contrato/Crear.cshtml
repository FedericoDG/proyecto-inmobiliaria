@model inmobiliaria.Models.Contrato
@{
  ViewData["Title"] = "Crear Contrato";
  Layout = "~/Views/Panel/_Layout.cshtml";
}


<div class="container py-4">
  <div class="row justify-content-center">
    <div class="col-md-10 col-lg-8">
      <div class="card shadow border-0">
        <div class="card-header bg-primary text-white d-flex align-items-center">
          <i class="bi bi-file-earmark-plus fs-4 me-2"></i>
          <span class="fs-4">Nuevo Contrato</span>
        </div>
        <div class="card-body">
          <form asp-action="Crear" method="post" autocomplete="off">
            <div class="row g-3">
              <div class="col-md-6">
                <label for="input-dni-inquilino" class="form-label">Buscar inquilino por DNI</label>
                <input type="text" class="form-control" id="input-dni-inquilino" autocomplete="off"
                  placeholder="Escriba DNI" />
                <select class="form-select mt-2" id="select-inquilino" size="3">
                  <option value="">Seleccione inquilino</option>
                </select>
                <input type="hidden" name="IdInquilino" id="id-inquilino-hidden" />
                <span asp-validation-for="IdInquilino" class="text-danger small"></span>
              </div>
              <div class="col-md-6">
                <label for="input-direccion-inmueble" class="form-label">Buscar inmueble por dirección</label>
                <input type="text" class="form-control" id="input-direccion-inmueble" autocomplete="off"
                  placeholder="Escriba dirección" />
                <select class="form-select mt-2" id="select-inmueble" size="3">
                  <option value="">Seleccione inmueble</option>
                </select>
                <input type="hidden" name="IdInmueble" id="id-inmueble-hidden" />
                <span asp-validation-for="IdInmueble" class="text-danger small"></span>
              </div>
              <div class="col-md-6">
                <label asp-for="FechaInicio" class="form-label">Fecha de Inicio</label>
                <input asp-for="FechaInicio" class="form-control" type="date" required />
                <span asp-validation-for="FechaInicio" class="text-danger small"></span>
              </div>
              <div class="col-md-6">
                <label asp-for="FechaFinOriginal" class="form-label">Fecha de Finalización</label>
                <input asp-for="FechaFinOriginal" class="form-control" type="date" required />
                <span asp-validation-for="FechaFinOriginal" class="text-danger small"></span>
              </div>
              <div class="col-md-6">
                <label asp-for="MontoMensual" class="form-label">Monto Mensual</label>
                <input asp-for="MontoMensual" class="form-control" id="MontoMensual"
                  value="@(ViewBag.MontoSugerido ?? "")" />
                <span asp-validation-for="MontoMensual" class="text-danger small"></span>
              </div>
            </div>
            <div class="d-flex justify-content-end gap-2 mt-4">
              <button type="submit" class="btn btn-primary px-4">
                <i class="bi bi-check-lg me-1"></i> Crear
              </button>
              <a href="/panel/contratos" class="btn btn-secondary px-4">
                <i class="bi bi-x-lg me-1"></i> Cancelar
              </a>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

@section Scripts {
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      // INQUILINO: búsqueda por DNI y select desplegado
      const inputDni = document.getElementById('input-dni-inquilino');
      const selectInq = document.getElementById('select-inquilino');
      const hiddenIdInq = document.getElementById('id-inquilino-hidden');
      let debounceTimeout;

      inputDni.addEventListener('input', function () {
        const dni = inputDni.value;
        clearTimeout(debounceTimeout);
        debounceTimeout = setTimeout(() => {
          if (dni.length >= 3) { // TODO: Sacar este "magic number" a una constante
            fetch(`/panel/inquilinos/buscar-por-dni?dni=${encodeURIComponent(dni)}`)
              .then(res => res.json())
              .then(data => {
                selectInq.innerHTML = '';
                if (data.length === 0) {
                  const option = document.createElement('option');
                  option.value = '';
                  option.textContent = 'No se encontraron inquilinos';
                  selectInq.appendChild(option);
                } else {
                  data.forEach(i => {
                    const option = document.createElement('option');
                    option.value = i.idInquilino;
                    option.textContent = `${i.nombre} ${i.apellido} (${i.dni})`;
                    selectInq.appendChild(option);
                  });
                }
              });
          } else {
            selectInq.innerHTML = '';
            const option = document.createElement('option');
            option.value = '';
            option.textContent = 'Seleccione inquilino';
            selectInq.appendChild(option);
          }
          hiddenIdInq.value = '';
        }, 350); // TODO: Sacar este "magic number" que representa el debounce a una constante
      });

      selectInq.addEventListener('change', function () {
        hiddenIdInq.value = selectInq.value;
      });

      const inputDir = document.getElementById('input-direccion-inmueble');
      const selectInm = document.getElementById('select-inmueble');
      const hiddenIdInm = document.getElementById('id-inmueble-hidden');
      let debounceTimeoutInm;

      inputDir.addEventListener('input', function () {
        const direccion = inputDir.value;
        clearTimeout(debounceTimeoutInm);
        debounceTimeoutInm = setTimeout(() => {
          if (direccion.length >= 3) {  // TODO: Sacar este "magic number" a una constante
            fetch(`/panel/inmuebles/buscar-por-direccion?direccion=${encodeURIComponent(direccion)}`)
              .then(res => res.json())
              .then(data => {
                selectInm.innerHTML = '';
                if (data.length === 0) {
                  const option = document.createElement('option');
                  option.value = '';
                  option.textContent = 'No se encontraron inmuebles';
                  selectInm.appendChild(option);
                } else {
                  data.forEach(i => {
                    const option = document.createElement('option');
                    option.value = i.idInmueble;
                    option.textContent = i.direccion;
                    selectInm.appendChild(option);
                  });
                }
              });
          } else {
            selectInm.innerHTML = '';
            const option = document.createElement('option');
            option.value = '';
            option.textContent = 'Seleccione inmueble';
            selectInm.appendChild(option);
          }
          hiddenIdInm.value = '';
        }, 350);  // TODO: Sacar este "magic number" que representa el debounce a una constante
      });
    });

    selectInm.addEventListener('change', function () {
      hiddenIdInm.value = selectInm.value;
      // Obtener el precio para ponerlo como "sugerencia"
      if (selectInm.value) {
        fetch(`/panel/inmuebles/obtener-precio/${selectInm.value}`)
          .then(res => res.json())
          .then(data => {
            if (data && data.precio !== undefined) {
              document.getElementById('MontoMensual').value = data.precio;
            }
          });
      } else {
        document.getElementById('MontoMensual').value = '';
      }
    });
  </script>
}
